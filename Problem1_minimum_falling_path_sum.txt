Problem 1 Solution:
1.	The problem states that we must find the possible falling paths of a given square array starting from one of the values at the top row. This means that starting from value x, there are at most three values in the next row to choose from. However, we also have to calculate the path from each of the values in that row to those in the third row that apply. This shows that there is a lot of repetition, as it is also seen in the example provided where many paths vary by just one number.
2.	This repetition can be avoided by storing the solutions to partial paths so that they are available during future calculations. For example, by storing the sum of [3,5] there is no need to calculate it again when doing [3,5,7], [3,5,8] or [3,5,9]. Keeping track of these subproblem’s solutions is the key to avoiding the repetitive calculations in the exhaustive search that would have to be done otherwise.
3.	I identified the problem by making sure I understood what a falling path was and how it was a part of the problem I had to solve. I had to describe the examples’ inputs and outputs and track the solution to get a good grasp of the problem. I explored approaches that would require exhaustive search and I acted by trying to improve on them, looking at the patterns and how they could be useful to achieving a solution to the bigger problem.
