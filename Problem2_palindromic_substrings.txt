Problem 2 Palindromic Substrings:
1.	The problem asks us to repeatedly find the palindromes in an input string. This means that we have to iterate through the string and find all instances where a substring is palindromic (including single characters), making it a repetitive task considering that there can be palindromes within palindromes.
2.	To solve it, we can store whether a character is the same as its neighbor and if the previous one from it and the next after its neighbor are the same as well. i.e. comparing chars x and y, x must equal y to count be palindromic, and if x-1 = y+1 as well then the substring from x-1 to y+1 is also palindromic. This means that in a substring “abba,” there is another substring, “bb” that is also palindromic and the solution to that can be stored to solve the larger problem quicker. 
3.	Identifying what the problem was asking for was an easy first task, then I tried to explore different approaches to the problem, thinking of how the problem can be broken down and of the data structures that I could use and what data can be stored. I acted by attempting to solve specific instances of a problem and looking for patterns. I looked back at how I can identify patterns in a problem and relate it to subproblems so the bigger problem is easier to solve.
